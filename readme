Instalar laravel

Crear una base de datos en Mysql con el nombre "tiendaApi" 


(*El directorio "tienda_angular_laravel" corresponde a la carpeta raiz*)


En la aplicación, configurar usuario y contraseña en el archivo "tienda_angular_laravel/backend/config/database.php"

Ej.:
```PHP
	'mysql' => [
            'driver' => 'mysql',
            'url' => env('DATABASE_URL'),
            'host' => env('DB_HOST', '127.0.0.1'),
            'port' => env('DB_PORT', '3306'),
            'database' => env('DB_DATABASE', 'tiendaApi'),
            'username' => env('DB_USERNAME', 'nombre_de_usuario_base_de_datos'),
            'password' => env('DB_PASSWORD', 'contraseña_base_de_datos'),
            'unix_socket' => env('DB_SOCKET', ''),
            'charset' => 'utf8mb4',
            'collation' => 'utf8mb4_unicode_ci',
            'prefix' => '',
            'prefix_indexes' => true,
            'strict' => false,
            'engine' => 'InnoDB ROW_FORMAT=DYNAMIC',
            'options' => extension_loaded('pdo_mysql') ? array_filter([
                PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),
            ]) : [],
        ],
```


__Obs.__: La línea con la configuración __'engine' => 'InnoDB ROW_FORMAT=DYNAMIC'__, es importante ya que de no configurarla podrían fallar las migraciones



Configurar datos de conexión usuario y contraseña en el archivo "tienda_angular_laravel/.env"

Ej.: 
```JAVASCRIPT
DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=tiendaApi
DB_USERNAME=nombre_usuario
DB_PASSWORD=contraseña_base_de_datos
```


**Desde consola Entrar al directorio backend (cd backend)**

En la carpeta backend correr las migraciones con el comando "php artisan migrate" para crear las tablas de la base de datos

En el archivo "tienda_angular_laravel/backend/seeds/DatabaseSeeders.php" descomentar todas las líneas contenidas en la función run() que llaman a los seeders (Líneas desde la 14 hasta la 28) 

En consola Entrar al directorio backend y correr el comando "php artisan db:seed" para sembrar los datos de prueba en la base de datos



**Para correr el servicio Api (Backend)**

En consola desde el directorio backend levantar el servidor de API con el comando "php artisan serve"


**Para correr la aplicación (Frontend)**

Correr Front Office (Tienda en línea)

Abrir una nueva consola de simbolo de sistemas e ingresar al directorio frontend (cd frontend)

Correr el comando "ng serve -o"	(Se levantara la aplicación en el puerto 4200)


**Correr Back Office (Administración de la tienda)**
Abrir una nueva consola de simbolo de sistemas e ingrear al directorio frontend (cd frontend)
Correr el comando "ng serve --project admin -o --port 5000" (Se levantara la aplicación en el puerto 5000)

**Credenciales para para el backoffice (Solo en caso de haber corrido los seeders)**
nickname	admin1
password	123456

La aplicación se encuentra en desarrollo, no está terminada, sólo permite vender algunos productos y efectuar los pagos con webpay y paypal
Los productos que se pueden comprar son los que se encuentran en la página de inicio de la tienda (home) en la sección productos populares, 


allí pasar el mouse sobre un producto y seleccionar el botón "Agregar al carro"

Una véz seleccionados los productos seleccionar el botón ubicado en la esquina superior derecha de la pantalla (Carro de compras), 
aparaecerá desde el borde derecho el carro de compras con los productos agregados y el resumen de la compra (montos y subtotal)
Seleccionar el botón "Efectuar pago"
Se redireccionará al formulario de resumen de la compra donde se han de cargar los datos del cliente y los datos de la compra
Seleccionar WebPay o Paypal como medio de pago
Seleccionar el botón concretar compra	(Sera redireccionado a la página de pago de webpay o de paypal)

Para simular una compra utilizar uno de los siguientes datos (cuenta de usuario de Jhon Doe (Paypal) o tarjetas de credito de prueba de WebPay)


---
Pago con Paypal	(En caso de no funcionar ingresar a Paypal developers y registrar la aplicación para obtener un correo de usuario y contraseña de pruebas nuevos)
usuario (Jhon Doe)	Email	=	sb-couwh397037@personal.example.com
contraseña			Password=	Qd2a$ZA5
---
Pago con WebPay	(más info en https://www.transbankdevelopers.cl/documentacion/como_empezar#ambiente-de-integracion)
Tarjetas de prueba
VISA 		4051885600446623, 	=> CVV 123, cualquier fecha de expiración. Esta tarjeta genera transacciones aprobadas.
MASTERCARD 	5186059559590568, 	=>CVV 123, cualquier fecha de expiración. Esta tarjeta genera transacciones rechazadas.
Redcompra 	4051884239937763 	=>genera transacciones aprobadas (para operaciones que permiten débito Redcompra y prepago)
Redcompra 	5186008541233829 	=>genera transacciones rechazadas (para operaciones que permiten débito Redcompra y prepago)
---
Cuando aparece un formulario de autenticación con RUT y clave, se debe usar el RUT 11.111.111-1 y la clave 123.
---

Luego de efectuar el pago se redireccionará de regreso a la aplicación 
En caso de una compra exitosa se redireccionará a la página resumen de pago donde se puede imprimir o descargar la Factura
En caso de una compra fallida se redireccionará a una página de error

**El BackOffice de la app se encuentra en desarrollo y aún no es posible ingresar nuevos productos 
Finalizado el backend finalizaré el frontend**


Este proyecto es desarrollado cómo hobby para probar el desarrollo del frontend con 2 proyectos angular en una sola aplicación y para consulta de código.
(Tanto el frontOffice cómo el backoffice pueden ser desarrolloados en el frontend en un sólo proyecto angular pero mi objetivo también era
el experimentar con el desarrollo de 2 proyectos angular en una sola app)